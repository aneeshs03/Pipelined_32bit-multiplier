//
// Generated by Bluespec Compiler, version 2021.12.1 (build fd501401)
//
// On Fri Mar 22 11:32:22 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mk_Testbench(CLK,
		    RST_N);
  input  CLK;
  input  RST_N;

  // ports of submodule a
  wire [63 : 0] a$get_out_snd;
  wire [31 : 0] a$get_inp_multiplicand, a$get_inp_multiplier;
  wire a$EN_get_inp, a$RDY_get_inp, a$RDY_get_out_snd;

  // submodule a
  mk_Multiply a(.CLK(CLK),
		.RST_N(RST_N),
		.get_inp_multiplicand(a$get_inp_multiplicand),
		.get_inp_multiplier(a$get_inp_multiplier),
		.EN_get_inp(a$EN_get_inp),
		.RDY_get_inp(a$RDY_get_inp),
		.get_out_fst(),
		.RDY_get_out_fst(),
		.get_out_snd(a$get_out_snd),
		.RDY_get_out_snd(a$RDY_get_out_snd));

  // submodule a
  assign a$get_inp_multiplicand = 32'd17 ;
  assign a$get_inp_multiplier = 32'd2 ;
  assign a$EN_get_inp = a$RDY_get_inp ;

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (a$RDY_get_out_snd)
	$display("\nProduct of Multiplicand and multiplier : %b",
		 a$get_out_snd);
    if (RST_N != `BSV_RESET_VALUE) if (a$RDY_get_out_snd) $finish(32'd1);
  end
  // synopsys translate_on
endmodule  // mk_Testbench

